<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>Encrypted KNN Starter</display-name>
    <description>Java Web Application with AES encryption and K-NN classification</description>

    <!-- Welcome file list -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- Session timeout (in minutes) -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- Login Servlet -->
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.example.encryptedknn.servlet.LoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>

    <!-- Upload Servlet -->
    <servlet>
        <servlet-name>UploadServlet</servlet-name>
        <servlet-class>com.example.encryptedknn.servlet.UploadServlet</servlet-class>
        <multipart-config>
            <max-file-size>10485760</max-file-size> <!-- 10MB -->
            <max-request-size>20971520</max-request-size> <!-- 20MB -->
            <file-size-threshold>5242880</file-size-threshold> <!-- 5MB -->
        </multipart-config>
    </servlet>
    <servlet-mapping>
        <servlet-name>UploadServlet</servlet-name>
        <url-pattern>/upload</url-pattern>
    </servlet-mapping>

    <!-- Download Servlet -->
    <servlet>
        <servlet-name>DownloadServlet</servlet-name>
        <servlet-class>com.example.encryptedknn.servlet.DownloadServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DownloadServlet</servlet-name>
        <url-pattern>/download</url-pattern>
    </servlet-mapping>

    <!-- Classify Servlet -->
    <servlet>
        <servlet-name>ClassifyServlet</servlet-name>
        <servlet-class>com.example.encryptedknn.servlet.ClassifyServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ClassifyServlet</servlet-name>
        <url-pattern>/classify</url-pattern>
    </servlet-mapping>

    <!-- Security constraint (optional - for HTTPS enforcement) -->
    <!-- Uncomment the section below to enforce HTTPS for sensitive operations -->
    <!--
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secure Pages</web-resource-name>
            <url-pattern>/login</url-pattern>
            <url-pattern>/upload</url-pattern>
            <url-pattern>/download</url-pattern>
            <url-pattern>/classify</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    -->

    <!-- Error pages -->
    <error-page>
        <error-code>404</error-code>
        <location>/error/404.html</location>
    </error-page>
    
    <error-page>
        <error-code>500</error-code>
        <location>/error/500.html</location>
    </error-page>

    <!-- Context parameters -->
    <context-param>
        <param-name>default-encryption-key-length</param-name>
        <param-value>256</param-value>
    </context-param>
    
    <context-param>
        <param-name>default-knn-k</param-name>
        <param-value>3</param-value>
    </context-param>

    <!-- Filter to set response headers (optional) -->
    <filter>
        <filter-name>CORSFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,POST,PUT,DELETE,OPTIONS,HEAD</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.headers</param-name>
            <param-value>Content-Type,X-Requested-With,Authorization</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORSFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
